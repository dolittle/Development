#!/bin/bash
# script to get a hugo docker set up with the whole documentation page 
# with your local repos documentation stuff mounted inside

REPO_NAME=$(basename "$(git rev-parse --show-toplevel)")
# we assume the push and fetch is the same so just get the fetch
GIT_REMOTE=$(git remote -v | head -n 1)
# get the github organization name with the first capture group
ORG_PATTERN=".*((github\.com\/)|(github\.com:))([^[:space:]]+)\/.*\.git.*"
ORG_NAME=$(echo "$GIT_REMOTE" | sed -E "s/$ORG_PATTERN/\4/g")

# pattern for getting just the part after the - from orgs like dolittle-tools, dolittle-fundamentals etc
DASH_PATTERN='.*-(\S+)'

echo "ORG NAME $ORG_NAME"

if [[ $ORG_NAME =~ $DASH_PATTERN ]] ; then
    # combine ORG_NAME with REPO_NAME to get the wanted structure for hugo.
    # check the structure from repo dolittle/Documentation, inside /Source/repositories
    ORG_PATH=$(echo "$ORG_NAME" | sed -E "s/$DASH_PATTERN/\1/g" | tr '[:upper:]' '[:lower:]')
    ORG_PATH=$ORG_PATH/$REPO_NAME
elif [[ $ORG_NAME == "dolittle" ]] ; then
    # ORG_PATH is the same as REPO_NAME but lowercase
    ORG_PATH=$(echo "$REPO_NAME" | tr '[:upper:]' '[:lower:]')
else
    echo "Error: not a Dolittle repository"
    echo "$GIT_REMOTE"
    exit 1
fi

if [ "$REPO_NAME" == "Documentation" ]; then
    # if we're writing documentation about documentation there is a symlink in the docker from
    # /Documentation/Source/content/contributing/documentation to ../../../Documentation/
    # so we basically just override the whole docker images dolittle/Documentation repo
    # with our local copy of it
    DOCKER_PATH="/Documentation"
elif [ "$REPO_NAME" == "Home" ] && [ "$ORG_NAME" == "dolittle" ]; then
    # this i fo the special case with dolittle/Home's documentation having to be put
    # into /Documentation/Source/repositories/Home directory where it gets symlinked to 
    # /Documentation/Source/content/guidelines
    DOCKER_PATH="/Documentation/Source/repositories/guidelines/Home"
else
    DOCKER_PATH="/Documentation/Source/repositories/$ORG_PATH"
fi

# get the absolute path to your local repos root
GIT_ROOT=$(git rev-parse --show-toplevel)

MOUNT_CMD="$GIT_ROOT:$DOCKER_PATH"
echo "Mounting folder $GIT_ROOT to $DOCKER_PATH"
# mount your local project root inside the Source/repositories/ path
docker run -it -p 1313:1313 -v "$MOUNT_CMD" dolittle/documentation

